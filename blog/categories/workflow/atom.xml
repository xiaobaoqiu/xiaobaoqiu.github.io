<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Workflow | xiaobaoqiu Blog]]></title>
  <link href="http://xiaobaoqiu.github.io/blog/categories/workflow/atom.xml" rel="self"/>
  <link href="http://xiaobaoqiu.github.io/"/>
  <updated>2016-08-16T12:15:47+08:00</updated>
  <id>http://xiaobaoqiu.github.io/</id>
  <author>
    <name><![CDATA[xiaobaoqiu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Activiti入门]]></title>
    <link href="http://xiaobaoqiu.github.io/blog/2016/04/06/activitiru-men/"/>
    <updated>2016-04-06T10:09:38+08:00</updated>
    <id>http://xiaobaoqiu.github.io/blog/2016/04/06/activitiru-men</id>
    <content type="html"><![CDATA[<ul>
<li><a href="#1.%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86">1.工作流的基本知识</a>

<ul>
<li><a href="#1.1%20%E8%83%8C%E6%99%AF">1.1 背景</a></li>
<li><a href="#1.2%20%E5%B7%A5%E4%BD%9C%E6%B5%81%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF">1.2 工作流使用场景</a></li>
<li><a href="#1.3%20BPMN%E5%9F%BA%E6%9C%AC%E5%85%83%E7%B4%A0">1.3 BPMN基本元素</a></li>
</ul>
</li>
<li><a href="#2.%E5%B8%B8%E8%A7%81%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81%E5%BC%95%E6%93%8E">2.常见的工作流引擎</a>

<ul>
<li><a href="#2.1%20jBPM">2.1 jBPM</a></li>
<li><a href="#2.2%20Activiti">2.2 Activiti</a></li>
<li><a href="#2.3%20FixFlow">2.3 FixFlow</a></li>
<li><a href="#2.4%20%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9">2.4 如何选择</a></li>
</ul>
</li>
<li><a href="#3.Activiti">3.Activiti</a>

<ul>
<li><a href="#3.1%20%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8">3.1 如何使用</a></li>
</ul>
</li>
<li><a href="#4.%E4%B8%9A%E5%8A%A1%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%B7%A5%E4%BD%9C%E6%B5%81">4.业务如何使用工作流</a></li>
</ul>


<p>最近在项目中涉及到工作流的知识,需要调研各个工作流引擎,顺道总结.</p>

<p>如何做流程服务,通常而言两种选择(在我的认知范围内的):</p>

<pre><code>1.状态机
2.工作流
</code></pre>

<p>状态机通常意味着需要和业务状态绑定在一起,因此无法做到业务和流程分离,通常的后果就是业务和流程紧耦合.</p>

<p>因此,当我们的多个业务系统涉及到流程时候,可以考虑工作流.</p>

<h2 id="1.工作流的基本知识">1.工作流的基本知识</h2>


<h4 id="1.1 背景">1.1 背景</h4>


<p>先介绍几个术语:</p>

<pre><code>1.BPM
业务流程管理(Business Process Management),基本内容是管理既定工作的流程,通过服务编排,统一调控各个业务流程,以确保工作在正确的时间被正确的人执行,达到优化整体业务过程的目的.
BPM概念的贯彻执行,需要有标准化的流程定义语言来支撑,使用统一的语言遵循一致的标准描述具体业务过程,这些流程定义描述由专有引擎去驱动执行,这个引擎就是工作流引擎.

2.Workflow
全部或者部分由计算机支持或自动处理的业务过程

3.WfMC
工作流管理联盟

4.BPMN
业务流程建模与标注(Business Process Modeling Notation),又叫业务流程建模符号.可以理解为工作流的建模语言.2004年5月发布了BPMN1.0规范.2011年BPMN2.0新规范的发布为各工作流产品互容互通提供了统一的标准,结束了各工作流厂商各自为政相互抵斥的局面.
</code></pre>

<p>参考:
<a href="http://www.infoq.com/cn/articles/bpmn2-activiti5">BPMN2新规范与Activiti5</a>
<a href="http://www.omg.org/spec/BPMN/2.0/">BPMN2.0规范</a></p>

<h4 id="1.2 工作流使用场景">1.2 工作流使用场景</h4>


<p>具体什么场景下适合使用工作流,参考前任的总结:</p>

<p><a href="http://stackoverflow.com/questions/104099/when-to-use-windows-workflow-foundation">when-to-use-windows-workflow-foundation</a>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>You may need WF only if any of the following are true:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;1.You have a long-running process.
</span><span class='line'>2.You have a process that changes frequently.
</span><span class='line'>3.You want a visual model of the process</span></code></pre></td></tr></table></div></figure>
我理解,注意这里的第三点说的流程可视化的目的并不是为了展示,而是说工作流提供了一种给非开发人员(如运营人员)在线修改流程并且流程实时生效的途径(当然,需要业务支持).</p>

<p><a href="http://programmers.stackexchange.com/questions/103972/when-to-use-workflow-engines">when-to-use-workflow-engines</a>
<code>
A workflow engine is useful when you need to go from a start to a finish but there are many different paths/logic/rules to get there.
if you have processes that are variable from start to end, use a workflow. If the same process can be used by everyone, then you don't need a workflow.
</code></p>

<h4 id="1.3 BPMN基本元素">1.3 BPMN基本元素</h4>


<p>简单介绍BPMN中的基本元素,详细内容可以在<a href="http://www.omg.org/spec/BPMN/2.0/">BPMN 2.0规范官网</a>下载PDF版本(章节7.2).包含5个基本元素,每个基本元素下面又包含集中类型的元素,其中Flow Objects是最重要的:</p>

<pre><code>1. Flow Objects 流对象
2. Data 数据
3. Connecting Objects 连接对象
4. Swimlanes 泳道
5. Artifacts 工件
</code></pre>

<h5>(1).Flow Objects</h5>

<p>Flow Objects包含了工作流的三个基本执行语义</p>

<pre><code>(1).Events 事件
发生在流程执行过程中的事情.像流程的启动,结束,边界条件以及每个活动的创建,开始,流转等都是流程事件,利用事件机制,可以通过事件控制器为系统增加辅助功能.如其它业务系统集成及活动预警等

(2).Activities 活动
在工作流中所有具备生命周期状态的都可以称之为活动,如原子级的任务(Task)以及子流程(Sub-Process)等.任务是流程模型中最小工作单元,不能继续分解.

(3).Gateways 网关
Gateways用来决定流程流转指向的,简单理解就是判断条件.比如同意走一个流程,驳回走另外一个流程.
</code></pre>

<p>事件有三种类型:Start, Intermediate, End</p>

<h5>(2).Data</h5>

<pre><code>Data Objects 数据对象
Data Inputs 数据输入
Data Outputs 数据输出
Data Stores 数据存储
</code></pre>

<h5>(3).Connecting Objects</h5>

<p>连接对象用来把各个流对象或流对象与其他信息连接起来
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(1).Sequence Flows 序列流
</span><span class='line'>表示流对象的前后执行顺序&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;(2).Message Flows 消息流
</span><span class='line'>表示公开流程或协作模型里参与者之间的消息,交互&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;(3).Associations 结合关系
</span><span class='line'>为流程中的元素关联信息或数据&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;(4).Data Associations 数据结合关系
</span><span class='line'>表示数据在流程、活动和数据对象之间的传递</span></code></pre></td></tr></table></div></figure></p>

<h5>(4).Swimlanes</h5>

<p>使用泳道来区分不同部门或者不同参与者的功能和职责。
<code>
Pools 池
Lanes 道
</code></p>

<h5>(5).Artifacts</h5>

<pre><code>Group 组
Text Annotation 文本注释
</code></pre>

<p>各种基本元素的示意图字节参考BPMN 2.0规范给出的图吧:</p>

<p><img src="/images/workflow/BPMN_model_1.png"></p>

<p><img src="/images/workflow/BPMN_model_2.png"></p>

<p>几个在线画图的应用如<a href="www.processon.com">processon</a>都支持BPMN图形.</p>

<p>参考:
<a href="http://blog.csdn.net/ronghao100/article/details/6707276">BPMN这点事-BPMN基本元素（上）</a>
<a href="http://blog.csdn.net/ronghao100/article/details/6711779">BPMN这点事-BPMN基本元素（下）</a></p>

<h2 id="2.常见的工作流引擎">2.常见的工作流引擎</h2>


<h4 id="2.1 jBPM">2.1 jBPM</h4>


<p><a href="http://www.jbpm.org/">jBPM官网</a></p>

<h4 id="2.2 Activiti">2.2 Activiti</h4>


<p><a href="http://www.activiti.org/">Activiti官网</a>
<a href="http://www.activiti.org/">Activiti用户手册</a>
<a href="http://www.mossle.com/docs/activiti/index.html">Activiti 5.16 用户手册中文版</a></p>

<h4 id="2.3 FixFlow">2.3 FixFlow</h4>


<p>FixFlow国人开发的工作流引擎
<a href="https://github.com/fixteam/fixflow">FixFlow github地址</a></p>

<h4 id="2.4 如何选择">2.4 如何选择</h4>


<p>主要从易用性,维护成本等几个角度考虑:</p>

<pre><code>1.流程设计器的支持;
2.嵌入到业务的成本,比如对Spring的支持等;
3.事务支持;
4.使用范围
</code></pre>

<p>目前来看,Activiti的使用是最简单方便的.</p>

<h2 id="3.Activiti">3.Activiti</h2>


<p>支持最新BPMN2.0规范的开源工作流引擎Activit5,实现了对规范的绝大多数图元的定义(包括一些自己的扩展定义),能够满足企业工作流的各种复杂应用.
它是一个无侵入的,支持嵌入式和独立部署的开源工作流引擎,是Tom Bayen离开jBoss加入Alfresco公司后的另立山头之作.</p>

<p>关于Activiti的一些关键特性:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>支持的流程格式: BPMN2、xPDL、jPDL等
</span><span class='line'>引擎核心: PVM（流程虚拟机）
</span><span class='line'>技术前身: jBPM3、jBPM4&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;数据库持久层: ORM MyBatis3
</span><span class='line'>事务管理: MyBatis机制/Spring事务控制
</span><span class='line'>数据库连接方式: Jdbc/DataSource
</span><span class='line'>支持数据库: Oracle、SQL Server、MySQL等多数数据库
</span><span class='line'>集成接口: SOAP、Mule、RESTful</span></code></pre></td></tr></table></div></figure></p>

<p>几个关键的概念:</p>

<pre><code>    1.流程定义
    BPMN语法定义的流程定义;比如请假流程定义:开始--&gt;申请人发起--&gt;直属leader审批--&gt;部门leader审批--&gt;人力审批--&gt;结束;

    2.流程实例
    启动一个流程case,比如张三发起一个请假流程,这时候就会生成一个请假流程的实例;

    3.历史流程实例
    已经结束的流程,还是可以被查询到

    4.任务
    最常见的用户任务,即需要人参与的流程节点. 比如请假流程中的直属leader审批这个节点就会生成一个用户任务.
</code></pre>

<h4 id="3.1 如何使用">3.1 如何使用</h4>


<p>这里主要大致说一下怎么结合Spring使用Activiti</p>

<p>Maven依赖
<code>
&lt;dependency&gt;
    &lt;groupId&gt;org.activiti&lt;/groupId&gt;
    &lt;artifactId&gt;activiti-engine&lt;/artifactId&gt;
    &lt;version&gt;5.14&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.activiti&lt;/groupId&gt;
    &lt;artifactId&gt;activiti-spring&lt;/artifactId&gt;
    &lt;version&gt;5.14&lt;/version&gt;
&lt;/dependency&gt;
</code>
其中activiti-spring主要是提供了SpringProcessEngineConfiguration这个配置入口,并且提供ProcessEngineFactoryBean这个流程引擎的Bean,通过这个Bean,我们就可以获取Activiti内部的各种Service:</p>

<pre><code>RepositoryService
RuntimeService
TaskService
HistoryService
ManagementService
IdentityService
FormService
</code></pre>

<p>activiti将其内部的表的建表语句和对应的Mybatis配置文件都打包在依赖jar包中,可以参考activiti-engine中的org.activiti.db这个包路径下的内容.</p>

<p><a href="http://www.tuicool.com/articles/NBZNFvF">整合Acitiviti在线流程设计器</a>
<a href="http://www.ibm.com/developerworks/cn/java/j-lo-activiti1/">Activiti - 新一代的开源 BPM 引擎</a>
<a href="http://www.infoq.com/cn/articles/bpmn2-activiti5">http://www.infoq.com/cn/articles/bpmn2-activiti5</a></p>

<h2 id="4.业务如何使用工作流">4.业务如何使用工作流</h2>


<p>一般使用方式两种:</p>

<pre><code>    1.独立部署的工作流服务
    对外服务方式: 接口
    和业务交互方式: 接口或者MQ
    优点: 彻底隔离工作流和业务;可以为多套业务提供服务;
    缺点: 无法保证业务数据的强一致性

    2.嵌入到业务系统
    和业务交互方式: 直接调用
    优点: 能保证业务数据的强一致性
    缺点: 每套业务都需要自己单独使用工作流(存在重复工作)
</code></pre>
]]></content>
  </entry>
  
</feed>
