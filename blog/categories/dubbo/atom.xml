<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Dubbo | xiaobaoqiu Blog]]></title>
  <link href="http://xiaobaoqiu.github.io/blog/categories/dubbo/atom.xml" rel="self"/>
  <link href="http://xiaobaoqiu.github.io/"/>
  <updated>2015-08-01T11:31:14+08:00</updated>
  <id>http://xiaobaoqiu.github.io/</id>
  <author>
    <name><![CDATA[xiaobaoqiu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Telnet Dubbo]]></title>
    <link href="http://xiaobaoqiu.github.io/blog/2015/04/11/telnet-dubbo/"/>
    <updated>2015-04-11T03:10:33+08:00</updated>
    <id>http://xiaobaoqiu.github.io/blog/2015/04/11/telnet-dubbo</id>
    <content type="html"><![CDATA[<p>Dubbo 2.0.5版本以后支持telnet命令，可以用来debug各个dubbo接口。</p>

<p>Dubbo官网：<a href="http://dubbo.io/User+Guide-zh.htm">http://dubbo.io/User+Guide-zh.htm</a></p>

<p>telnet涉及的命令包括：
<code>
ls
ps
cd
pwd
trace
count
invoke
status
log
help
clear
exit
</code></p>

<h1>1.telnet</h1>

<p>连接dubbo的provider：
<code>
telnet 127.0.0.1 20880
</code></p>

<h1>2.ls</h1>

<p>ls显示服务列表,ls -l显示服务详细信息列表:
<code>
dubbo&gt;ls
Xxx.xx.xxx.service.ConsumerMessageHandler
...
</code></p>

<p>ls XxxService显示服务的方法列表，ls -l XxxService显示服务的方法详细信息列表
<code>
ls -l Xxx.xx.xxx.service.ConsumerMessageHandler
</code></p>

<h1>3.ps</h1>

<p>ps显示服务端口列表，ps -l显示服务地址列表(ip + 端口)：
<code>
dubbo&gt;ps -l
dubbo://10.100.11.222:30003
</code></p>

<p>ps 20880显示端口上的连接信息，ps -l 20880显示端口上的连接详细信息：
<code>
dubbo&gt;ps -l 20880
/127.0.0.1:51478 -&gt; /127.0.0.1:20880
...
</code></p>

<h1>4.cd</h1>

<p>改变缺省服务，当设置了缺省服务，凡是需要输入服务名作为参数的命令，都可以省略服务参数。</p>

<p>cd /可以取消缺省服务
<code>
dubbo&gt;cd Xxx.xx.xxx.service.ConsumerMessageHandler
Used the Xxx.xx.xxx.service.ConsumerMessageHandler as default.
You can cancel default service by command: cd /
</code></p>

<h1>5.pwd</h1>

<p>显示当前缺省服务
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dubbo&gt;pwd
</span><span class='line'>Xxx.xx.xxx.service.ConsumerMessageHandler&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;dubbo&gt;cd /
</span><span class='line'>Cancelled default service qunar.tc.qmq.service.ConsumerMessageHandler.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;dubbo&gt;pwd
</span><span class='line'>/</span></code></pre></td></tr></table></div></figure></p>

<h1>6.trace</h1>

<p>trace用来跟踪调用情况，当响应的Service的方法被调有，就会有调用日志：</p>

<pre><code>trace XxxService                跟踪1次服务任意方法的调用情况
trace XxxService 10             跟踪10次服务任意方法的调用情况
trace XxxService xxxMethod      跟踪1次服务方法的调用情况
trace XxxService xxxMethod 10   跟踪10次服务方法的调用情况
</code></pre>

<h1>7.count</h1>

<pre><code>count XxxService                统计1次服务任意方法的调用情况。
count XxxService 10             统计10次服务任意方法的调用情况。
count XxxService xxxMethod      统计1次服务方法的调用情况。
count XxxService xxxMethod 10   统计10次服务方法的调用情况。
</code></pre>

<pre><code>dubbo&gt;count Xxx.xx.xxx.service.ConsumerMessageHandler
dubbo&gt;
+-------------------+-------+--------+--------+---------+-----+
| method            | total | failed | active | average | max |
+-------------------+-------+--------+--------+---------+-----+
| queryMessageState | 0     | 0      | 0      | 0ms     | 0ms |
| handle            | 0     | 0      | 0      | 0ms     | 0ms |
+-------------------+-------+--------+--------+---------+-----+
</code></pre>

<h1>8.invoke</h1>

<pre><code>调用服务的某个方法:  invoke XxxService.xxxMethod({"prop": "value"})
调用服务的方法(自动查找包含此方法的服务):  invoke xxxMethod({"prop": "value"})
</code></pre>

<pre><code>invoke Xxx.xx.xxx.service..batchGetExpiredList({"batch":1})
</code></pre>

<h1>9.status</h1>

<pre><code>status:显示汇总状态，该状态将汇总所有资源的状态，当全部OK时则显示OK，只要有一个ERROR则显示ERROR，只要有一个WARN则显示WARN

status -l:显示状态列表。
</code></pre>

<p>所有的资源包括:</p>

<pre><code>load        cpu数据,包括当前load,cpu核数
server      ip+port的列表(ps -l的数据)
datasource  数据库连接参数
threadpool  线程池参数
memory      当前JVM的内存使用情况(max,used,free)
registry    注册中心参数
spring      spring的配置文件
summary     上面这些信息中出现的Error等信息的汇总
</code></pre>

<p>示例如下
+&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-+
| resource   | status | message                          |
+&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-+
| load       | OK     | load:0.61,cpu:4                  |
| spring     | OK     | classpath:applicationContext.xml |
| summary    | ERROR  | registry                         |
+&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-+</p>

<h1>10.log</h1>

<p>2.0.6以上版本支持</p>

<pre><code>log  error:     修改dubbo logger的日志级别
log 100:        查看file logger的最后100字符的日志
</code></pre>

<h1>11.help</h1>

<pre><code>help        显示telnet命帮助信息
help Xxx    显示xxx命令的详细帮助信息
</code></pre>

<pre><code>dubbo&gt;help 
Please input "help [command]" show detail.
 log level                        - Change log level or show log 
 pwd                              - Print working default service.
 trace [service] [method] [times] - Trace the service.
 clear [lines]                    - Clear screen.
 exit                             - Exit the telnet.
 help [command]                   - Show help.
 info                             - show dubbo info
 ls [-l] [service]                - List services and methods.
 invoke [service.]method(args)    - Invoke the service method.
 ps [-l] [port]                   - Print server ports and connections.
 cd [service]                     - Change default service.
 status [-l]                      - Show status.
 count [service] [method] [times] - Count the service.
</code></pre>

<h1>12.clear</h1>

<pre><code>clear           清除屏幕上的内容
clear 100       清除屏幕上的指定行数的内容
</code></pre>

<h1>13.exit</h1>

<pre><code>exit    退出当前telnet命令行。
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dubbo Thread Pool Exhausted]]></title>
    <link href="http://xiaobaoqiu.github.io/blog/2015/04/02/dubbo-thread-pool-exhausted/"/>
    <updated>2015-04-02T20:13:22+08:00</updated>
    <id>http://xiaobaoqiu.github.io/blog/2015/04/02/dubbo-thread-pool-exhausted</id>
    <content type="html"><![CDATA[<p>今天出现一次dubbo的Thread pool exhausted导致服务不可用。根本原因是Mysql的慢查询。
<code>
Caused by: java.util.concurrent.RejectedExecutionException: Thread pool is EXHAUSTED! Thread Name...
</code></p>

<p>RejectedExecutionException表示线程池已经达到最大值，并且没有空闲连，拒绝执行了一些任务。
Thread pool exhausted通常是min和max不一样大时，表示当前已创建的连接用完，进行了一次扩充，创建了新线程，但不影响运行。</p>

<p>原因可能是连接池不够用，可以在provider的配置文件中设置threads参数：
<code>
&lt;dubbo:provider port="20920" timeout="20000" threads="200"/&gt;
</code></p>

<p>如果线程池已经有200，还不够，通常是业务处理占用线程时间过长，
需优化业务，可通过jstack查看进程的状态，分析当前大多数线程都在干什么，从而分析出哪个地方是瓶颈，
比如，如果大部分线程都在处理SQL，可能是数据库连接不够，或数据源配置错误，或SQL没走索引等。</p>

<p>参考：
<a href="http://alibaba.github.io/dubbo-doc-static/FAQ-focusedCommentId=9633823.htm#FAQ-9.%E5%87%BA%E7%8E%B0java.util.concurrent.RejectedExecutionException%E6%88%96%E8%80%85Threadpoolexhausted%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F">http://alibaba.github.io/dubbo-doc-static/FAQ-focusedCommentId=9633823.htm#FAQ-9.%E5%87%BA%E7%8E%B0java.util.concurrent.RejectedExecutionException%E6%88%96%E8%80%85Threadpoolexhausted%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F</a></p>
]]></content>
  </entry>
  
</feed>
